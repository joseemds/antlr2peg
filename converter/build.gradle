/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our Samples at https://docs.gradle.org/8.14.3/samples
 */

plugins {
	id "application"
	id "java"
	id "antlr"
	id 'com.diffplug.spotless' version '6.25.0'
}


spotless {
    java {
        googleJavaFormat("1.17.0")
        target 'src/main/java/**/*.java'
    }
}

dependencies {
  antlr "org.antlr:antlr4:4.13.2"
  testImplementation 'org.junit.jupiter:junit-jupiter:5.10.1'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

repositories {
	mavenCentral()
}

application {
	mainClass = 'Converter'
}

def copyAntlrGrammarDeps = tasks.register("copyAntlrGrammarDeps", Copy) {
    from("src/main/antlr/predefined.tokens", "src/main/antlr/LexerAdaptor.java")
    into(layout.buildDirectory.dir("generated-src/antlr/main"))
}

generateGrammarSource {
    dependsOn copyAntlrGrammarDeps

    arguments += ['-visitor']

    outputDirectory = file("build/generated-src/antlr/main")
}


test {
  useJUnitPlatform()
}

tasks.register("compareParser", JavaExec) {
    group = "verification"
    description = "Test generated parser vs ANTLR parser"
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "CompareParsers"

    if (project.hasProperty('grammar')) {
        args project.property('grammar')
    } else {
        args 'Dot'
    }
}

run {
    standardInput = System.in
}
